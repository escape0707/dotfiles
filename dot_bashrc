#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
alias grep='grep --color=auto'
PS1='[\u@\h \W]\$ '

# My config
PS1='[\u@\h \w]\n\$ '

source /usr/share/doc/pkgfile/command-not-found.bash

export XDG_CACHE_HOME=$HOME/.cache
export XDG_CONFIG_HOME=$HOME/.config
export XDG_DATA_HOME=$HOME/.local/share

export CARGO_HOME="$XDG_DATA_HOME"/cargo
export TEXMFHOME=$XDG_DATA_HOME/texmf
export TEXMFVAR=$XDG_CACHE_HOME/texlive/texmf-var
export TEXMFCONFIG=$XDG_CONFIG_HOME/texlive/texmf-config

alias anifps='gnome-randr modify --mode 3840x2160@23.976 DP-2'
alias cmcd="cd $XDG_DATA_HOME/chezmoi"
alias enven='env LANG=en_US.UTF-8 LANGUAGE=en_US'
alias hifps='gnome-randr modify --mode 3840x2160@119.993 DP-2'
alias less='less -R'
alias ll='ls -al --color=auto'
alias pacclear='paccache --remove && paccache --remove --uninstalled --keep 0'
alias pacrm='pacman -Qqd | paru -Rnsu -'
alias pacup='sudo pacman -Sy && paru -Su'
alias rebootwin='systemctl reboot --boot-loader-entry=auto-windows'
alias rm='gio trash'
alias updsrcinfo='makepkg --printsrcinfo | tee .SRCINFO'
alias vi='nvim'
alias vimdiff='nvim -d'

function setfps {
    gnome-randr modify --mode 3840x2160@$1.${2:-000} DP-2
}

function zimu {
    local gpu="gpu$4"
    local hash=$(ffprobe -show_format -loglevel error "$1" | b2sum | cut -d " " -f 1)
    local hashed_audio_name=$hash.mkv
    local hashed_log_name=$hash.log
    local hashed_sub_name=$hash.srt

    local filename_wo_extension="${1%.*}"
    if scp $gpu:subs/$hashed_sub_name "$filename_wo_extension.srt"; then
        echo "Output subtitle file exists on remote. Subtitle downloaded." &&
        ssh $gpu "rm audio/$hashed_audio_name subs/$hashed_sub_name subs/$hashed_log_name" &&
        echo "Cleaned up server side leftover files." &&
        ssh $gpu "systemctl --user list-units --type=service --quiet" &&
        echo "No running tasks on remote. Disabling lingering..." &&
        ssh $gpu "loginctl disable-linger" &&
        echo "Disabled lingering."
        return
    fi

    if ssh $gpu "test -e audio/$hashed_audio_name"; then
        echo "Only audio file exists on remote."
        if ! ssh $gpu "systemctl --user list-units --type=service --quiet"; then
            echo "There are some running user services on remote. Seems still processing..."
            return
        fi 
        echo "But no running tasks on remote. Something is wrong." &&
        echo "Please Manually remove audio/$hashed_audio_name and try again." &&
        echo "Disabling lingering since no tasks are running..." &&
        ssh $gpu "loginctl disable-linger" &&
        echo "Disabled lingering."
        return
    fi

    [ ! -f "/tmp/$hashed_audio_name" ] && ffmpeg -i "$1" -map a -c copy "/tmp/$hashed_audio_name"
    # Use `command` here to avoid local shell alias of `rm`.
    scp /tmp/$hashed_audio_name $gpu:audio && command rm "/tmp/$hashed_audio_name" &&
    # Apptainer can't load nvidia kernel modules themselves and will fail if the module is not loaded.
    # Invoke `nvidia-smi` to load modules and sanity check if server GPUs are too busy.
    # Usually when LANG contains "utf-8", `less` will support UTF-8. 
    # But when "UsePAM=no" was set in sshd_config, `/etc/locale.conf` was not parsed, and less won't
    # support UTF-8. Thus, I'm using "LESSCHARSET=utf-8" here.
    ssh -t $gpu -- loginctl enable-linger "&&" \
        nvidia-smi "&&" \
        systemd-run --user -p "StandardOutput=truncate:\$HOME/subs/$hashed_log_name" \
        env APPTAINERENV_CUDA_VISIBLE_DEVICES=${3:-1} \
        apptainer run --nv \~/faster-whisper.sif \
        --vad_filter True --model large-v2 --output_dir=\$HOME/subs --output_format=srt \
        --language ${2:-ja} \
        \~/audio/$hashed_audio_name "&&" \
        env LESSCHARSET=utf-8 less +F subs/$hashed_log_name
}
